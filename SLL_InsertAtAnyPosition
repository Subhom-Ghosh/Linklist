#include <stdio.h>
#include <conio.h>
#include <malloc.h>  
#include<stdlib.h>

struct slinklist
{
int data;
struct slinklist* next;
};

typedef struct slinklist node;  
node *start = NULL;

node* getnode()
{
     node* newnode;
     newnode = (node *) malloc(sizeof(node));    
     printf("\n Enter data: ");
     scanf("%d", &newnode -> data); 
     newnode -> next = NULL; 
     return newnode;
}

void create_list( int n)
{
    int i;
    node * newnode, *temp; 
    for( i = 0 ; i < n ; i++)
    {
          newnode = getnode(); 
          if(start == NULL)
         {
             start = newnode;
         }
         else
         {
             temp = start;
             while(temp -> next != NULL) 
                temp = temp -> next;
             temp -> next = newnode;
         }
    }
}


void traverse()
{
     node *temp; 
     temp =start;
     printf("\n The contents of List (Left to Right): \n");
     if(start == NULL )
        printf("\n Empty List");
     else
     {
        while (temp != NULL)
        {
            printf("%d ->", temp -> data);  
            temp = temp -> next;
            
        }
     }
     printf("X");
}
void insert_at_beg()
{
	node*newnode;
	newnode=getnode();
	if(start==NULL)
	{
		start=newnode;
	}
	else 
	{
		newnode->next=start;
		start=newnode;
	}
}
void insert_at_end()
{
	node*newnode,*temp;
	newnode=getnode();
	if(start==NULL)
	{
		start=newnode;
	}
	else{
		temp=start;
		while(temp->next!=NULL)
		temp=temp->next;
		temp->next=newnode;
		}
}
int countnode()
{
	int count=1;
	node* temp;
	temp=start;
	while(temp->next!=NULL)
	{
		count++;
		temp=temp->next;
	}
	return count;
}
void insert_at_pos()
{
	node* newnode,*temp;
	int pos,nodectr,i;
	newnode=getnode();
	printf("Enter the Position ");
	scanf("%d",&pos);
	nodectr=countnode();
	if(pos>(nodectr+1))
	{
		printf("\n Position is out of range");
		return;
	}
	else if(pos>1&&pos<=nodectr)
	{
		temp=start;
		for(i=1;i<pos-1;i++)
		temp=temp->next;
	newnode->next=temp->next;
	temp->next=newnode;
	}
	else
	printf("\n %d is not an intermediate position",pos);
}
int main()
{
     int num,ch;
     printf("Enter number of elements want to insert in the list: ");
     scanf("%d",& num);
     create_list(num);
     traverse();
     while(1)
     {
     	printf("\n1 create list\n");
     	printf("2 Add element at first\n");
     	printf("3 Add element at end\n");
     	printf("4 Add element at intermediate position\n");
     	printf("5 display list\n");
     	printf("6 exit\n");
     	printf("Which option do you want to do ");
     	scanf("%d",&ch);
     	switch(ch)
     	{
     		case 1:printf("Enter the node ");
     		scanf("%d",&num);
     		create_list(num);
     		break;
     		case 2:insert_at_beg();
     		break;
     		case 3:
     		insert_at_end();
     		break;
     		case 4:
     		insert_at_pos();
     		break;
     		case 5:
     		traverse();
     		break;
     		case 6: exit(0);
     		break;
     		default: printf("Wrong choices");
		 }
	 }
     return 0;
}

